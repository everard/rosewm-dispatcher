// Copyright Nezametdinov E. Ildus 2023.
// Distributed under the GNU General Public License, Version 3.
// (See accompanying file LICENSE_GPL_3_0.txt or copy at
// https://www.gnu.org/licenses/gpl-3.0.txt)
//
#ifndef H_197460BD03794BAE9CDDF38674FF8EF9
#define H_197460BD03794BAE9CDDF38674FF8EF9

#include <cstddef>
#include <span>
#include <string_view>

namespace rose {

////////////////////////////////////////////////////////////////////////////////
// Standard integer type.
////////////////////////////////////////////////////////////////////////////////

using std::size_t;

////////////////////////////////////////////////////////////////////////////////
// UTF-32 encoded Unicode string buffer.
////////////////////////////////////////////////////////////////////////////////

struct utf32_string_buffer {
    ////////////////////////////////////////////////////////////////////////////
    // Conversion operators.
    ////////////////////////////////////////////////////////////////////////////

    operator std::span<char32_t>() noexcept {
        return std::span{data, size};
    }

    operator std::span<char32_t const>() const noexcept {
        return std::span{data, size};
    }

    ////////////////////////////////////////////////////////////////////////////
    // Data members.
    ////////////////////////////////////////////////////////////////////////////

    char32_t data[255];
    size_t size;
};

////////////////////////////////////////////////////////////////////////////////
// String conversion interface.
////////////////////////////////////////////////////////////////////////////////

auto
convert_utf8_to_utf32(std::u8string_view string) -> utf32_string_buffer;

} // namespace rose

#endif // H_197460BD03794BAE9CDDF38674FF8EF9
